//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Egelke.EHealth.Client.EBirth
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ProtectionLevel = System.Net.Security.ProtectionLevel.Sign, Namespace = "urn:be:fgov:ehealth:ttp:protocol:v1", ConfigurationName = "EBirth")]
    public interface TTPPortType
    {
        
        // CODEGEN: Generating message contract since the operation SendCMSMessage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:be:fgov:ehealth:ttp:protocol:v1:SendCMSMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Egelke.EHealth.Client.EBirth.SendCMSMessageResponse SendCMSMessage(Egelke.EHealth.Client.EBirth.SendCMSMessageRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendCMSMessageRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendCMSMessageRequest", Namespace="urn:be:fgov:ehealth:ttp:protocol:v1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SendCMSMessageRequest1;
        
        public SendCMSMessageRequest()
        {
        }
        
        public SendCMSMessageRequest(byte[] SendCMSMessageRequest1)
        {
            this.SendCMSMessageRequest1 = SendCMSMessageRequest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendCMSMessageResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendCMSMessageResponse", Namespace="urn:be:fgov:ehealth:ttp:protocol:v1", Order=0)]
        public object SendCMSMessageResponse1;
        
        public SendCMSMessageResponse()
        {
        }
        
        public SendCMSMessageResponse(object SendCMSMessageResponse1)
        {
            this.SendCMSMessageResponse1 = SendCMSMessageResponse1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TTPPortTypeChannel : Egelke.EHealth.Client.EBirth.TTPPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TTPPortTypeClient : System.ServiceModel.ClientBase<Egelke.EHealth.Client.EBirth.TTPPortType>, Egelke.EHealth.Client.EBirth.TTPPortType
    {
        
        public TTPPortTypeClient()
        {
        }
        
        public TTPPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public TTPPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public TTPPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public TTPPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Egelke.EHealth.Client.EBirth.SendCMSMessageResponse Egelke.EHealth.Client.EBirth.TTPPortType.SendCMSMessage(Egelke.EHealth.Client.EBirth.SendCMSMessageRequest request)
        {
            return base.Channel.SendCMSMessage(request);
        }
        
        public object SendCMSMessage(byte[] SendCMSMessageRequest1)
        {
            Egelke.EHealth.Client.EBirth.SendCMSMessageRequest inValue = new Egelke.EHealth.Client.EBirth.SendCMSMessageRequest();
            inValue.SendCMSMessageRequest1 = SendCMSMessageRequest1;
            Egelke.EHealth.Client.EBirth.SendCMSMessageResponse retVal = ((Egelke.EHealth.Client.EBirth.TTPPortType)(this)).SendCMSMessage(inValue);
            return retVal.SendCMSMessageResponse1;
        }
    }
}
